---
jupyterhub:
    proxy:
        https:
            enabled: true
            hosts:
                - psi-tutorial{{ '-staging' if environ('K8S_NAMESPACE')=='staging' else '' }}.aiidalab.io
            letsencrypt:
                contactEmail: aiidalab@materialscloud.org
    singleuser:
        image:
            name: aiidalab/qe # ghcr.io/aiidalab/qe
            tag: latest # v24.10.0a7
            pullPolicy: IfNotPresent
        #nodeSelector: # ensure that the pods are scheduled on the correct node pool, i.e. "users"
        #    agentpool: users8cpusv5
        cmd:
            - start-singleuser.sh
        extraEnv:
            JUPYTERHUB_SINGLEUSER_APP: notebook.notebookapp.NotebookApp
        cpu:
            guarantee: 1.5
            limit: 2
        memory:
            guarantee: 6G
            limit: 6G
        storage:
            homeMountPath: /home/jovyan
            dynamic:
                storageClass: userpool-storage{{ '' if environ('K8S_NAMESPACE')=='staging' else '-production' }}
            capacity: 50Gi
            extraVolumes:
                - name: hub-templates
                  configMap:
                      name: hub-templates
                - name: hub-external
                  configMap:
                      name: hub-external
                - name: etc-jupyter
                  configMap:
                      name: user-etc-jupyter
            extraVolumeMounts:
                - mountPath: /etc/jupyterhub/templates
                  name: hub-templates
                - mountPath: /usr/local/share/jupyterhub/static/external
                  name: hub-external
                - mountPath: /etc/jupyter
                  name: etc-jupyter
    hub:
        readinessProbe:
            enabled: true
            initialDelaySeconds: 5  # Increase delay to allow Hub to start
            periodSeconds: 10        # Frequency of the probe check
            failureThreshold: 5      # Allow 5 failures before marking unhealthy
            timeoutSeconds: 5        # Timeout for the probe check
        #nodeSelector:
        #    agentpool: users8cpusv5
        db:
            pvc:
                storageClassName: userpool-storage{{ '' if environ('K8S_NAMESPACE')=='staging' else '-production' }}
                storage: 1Gi
        extraConfig:
            00-logo: |
                c.JupyterHub.logo_file = "/usr/local/share/jupyterhub/static/external/aiidalab-wide-logo.png"
            01-allowed_users: |
                # read yaml file with allowed users

                import yaml
                
                allowed_users_list = '/etc/jupyterhub/allowed_users_list.yaml'
                with open(allowed_users_list, 'r') as f:
                    allowed_users = yaml.safe_load(f)
                    
                c.Authenticator.allowed_users = allowed_users['allowed_users']
            02-spawner: |
                c.KubeSpawner.http_timeout = 300
            03-templates: |
                c.JupyterHub.template_paths.append('/etc/jupyterhub/templates')
            04-faq-about-handler: |
                from jupyterhub.handlers import BaseHandler

                class AboutHandler(BaseHandler):
                    def get(self):
                        self.write(self.render_template("about.html", sync=True))

                class FAQHandler(BaseHandler):
                    def get(self):
                        self.write(self.render_template("faq.html", sync=True))

                c.JupyterHub.extra_handlers.extend([
                    (r"about", AboutHandler),
                    (r"faq", FAQHandler),
                ])
            #20-announce: |
            #    c.JupyterHub.template_vars = {
            #        'announcement_login': 'The site is in beta testing. Please report any issue you might encounter in the <a href="https://github.com/unkcpz/aiidalab-demo-server/issues/new">AiiDAlab Demo GitHub repository</a>.',
            #        'announcement': 'The site is in beta testing. Use it at your own risk.',
            #    }
        extraVolumes:
            - name: hub-templates
              configMap:
                  name: hub-templates
            - name: hub-external
              configMap:
                  name: hub-external
            - name: allowed-users-list
              configMap:
                  name: allowed-users-list
        extraVolumeMounts:
            - mountPath: /etc/jupyterhub/templates
              name: hub-templates
            - mountPath: /usr/local/share/jupyterhub/static/external
              name: hub-external
            - mountPath: /etc/jupyterhub/allowed_users_list.yaml
              name: allowed-users-list
              subPath: allowed_users_list.yaml
              readOnly: true
        config:
            JupyterHub:
                authenticator_class: 'github'
            GitHubOAuthenticator:
                client_id: {{ 'Ov23ctkCdImzUrxDVq2y' if environ('K8S_NAMESPACE')=='staging' else 'Ov23lidzZxMkyrhPjiY9' }} #{{ environ('OAUTH_CLIENT_ID') }}
                client_secret: {{ 'd95d18337537d405f98e55e2db0a6a484d5fbc44' if environ('K8S_NAMESPACE')=='staging' else '0e4b7a5381ddfe1e744232df59fef19c09a85605' }} #{{ environ('OAUTH_CLIENT_SECRET') }}
                oauth_callback_url: https://psi-tutorial{{ '-staging' if environ('K8S_NAMESPACE')=='staging' else '' }}.aiidalab.io/hub/oauth_callback
                #allow_all: true
                allowed_users: []
                #allowed_organizations: ['aiidalab']
                allow_existing_users: false
                admin_users:
                    - superstar54
                    - unkcpz
                    - edan-bainglass
                    - giovannipizzi
                    - t-reents
                    - AndresOrtegaGuerrero
                    - mikibonacci

